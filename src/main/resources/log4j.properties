### 日志输出编码格式设定UTF-8 ###
log4j.appender.logfile.encoding=UTF-8



### 设置输出日志级别   ###
log4j.rootLogger = INFO,stdout,E,R
log4j.logger.org.mybatis=DEBUG 
##可以将日志从整个mapper接口级别调整到到语句级别，从而实现更细粒度的控制##
log4j.logger.org.mybatis.example.BlogMapper.selectBlog=TRACE  
##可以对一组mapper接口记录日志，只要对mapper接口所在的包开启日志功能即可##
log4j.logger.org.mybatis.example=TRACE 
##记录其执行的SQL语句##
log4j.logger.org.mybatis.example=DEBUG  



### 输出到控制台配置  ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 输出到日志文件配置  ###
log4j.appender.appenderName = fully.qualified.name.of.appender.class
### 每天输出一个日志文件
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
###	日志文件放到部署根目录的WEB-INF目录下
log4j.appender.E.File = ${webapp.root}/logs/error.log
### 以追加的方式输出日志到文件
log4j.appender.E.Append = true
### 日志输出错误级别
log4j.appender.E.Threshold = INFO
### 日志布局
log4j.appender.E.layout = org.apache.log4j.PatternLayout
### 日志格式
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n


#### 保存异常信息到单独文件 ###
#log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
### 异常日志文件名   
#log4j.appender.D.File = ../logs/wechatcheck.log 
#log4j.appender.D.Append = true
### 只输出ERROR级别以上的日志!!!
#log4j.appender.D.Threshold = ERROR
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n




### Lo4jInit Servlet
## Set root category priority to info and its only appender to console.   
#log4j.rootCategory=info,console,R  
##log4j.debug=true  
#  
## console is set to be a ConsoleAppender using a PatternLayout.   
#log4j.appender.console=org.apache.log4j.ConsoleAppender   
#log4j.appender.console.Threshold=info   
#log4j.appender.console.layout=org.apache.log4j.PatternLayout   
#log4j.appender.console.layout.ConversionPattern=- %m%n  
#  
# R is set to be a File appender using a PatternLayout.  
log4j.appender.R=org.apache.log4j.RollingFileAppender  
log4j.appender.R.Append=true  
log4j.appender.R.Threshold=info   
log4j.appender.R.MaxFileSize=1024KB   
log4j.appender.R.MaxBackupIndex=10  
log4j.appender.R.File=${webapp.root}/logs/logs.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout  
log4j.appender.R.layout.ConversionPattern=%-d{yyyy-MM-dd HH\:mm\:ss} [%c]-[%p] %m%n  
